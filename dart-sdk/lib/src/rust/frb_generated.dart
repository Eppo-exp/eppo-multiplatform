// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api.dart';
import 'api/attributes.dart';
import 'api/client.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'frb_generated.io.dart'
    if (dart.library.js_interop) 'frb_generated.web.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Main entrypoint of the Rust API
class RustLib extends BaseEntrypoint<RustLibApi, RustLibApiImpl, RustLibWire> {
  @internal
  static final instance = RustLib._();

  RustLib._();

  /// Initialize flutter_rust_bridge
  static Future<void> init({
    RustLibApi? api,
    BaseHandler? handler,
    ExternalLibrary? externalLibrary,
  }) async {
    await instance.initImpl(
      api: api,
      handler: handler,
      externalLibrary: externalLibrary,
    );
  }

  /// Initialize flutter_rust_bridge in mock mode.
  /// No libraries for FFI are loaded.
  static void initMock({
    required RustLibApi api,
  }) {
    instance.initMockImpl(
      api: api,
    );
  }

  /// Dispose flutter_rust_bridge
  ///
  /// The call to this function is optional, since flutter_rust_bridge (and everything else)
  /// is automatically disposed when the app stops.
  static void dispose() => instance.disposeImpl();

  @override
  ApiImplConstructor<RustLibApiImpl, RustLibWire> get apiImplConstructor =>
      RustLibApiImpl.new;

  @override
  WireConstructor<RustLibWire> get wireConstructor =>
      RustLibWire.fromExternalLibrary;

  @override
  Future<void> executeRustInitializers() async {
    api.crateApiInitApp();
  }

  @override
  ExternalLibraryLoaderConfig get defaultExternalLibraryLoaderConfig =>
      kDefaultExternalLibraryLoaderConfig;

  @override
  String get codegenVersion => '2.8.0';

  @override
  int get rustContentHash => 1925354896;

  static const kDefaultExternalLibraryLoaderConfig =
      ExternalLibraryLoaderConfig(
    stem: 'eppo_dart',
    ioDirectory: 'rust/target/release/',
    webPrefix: 'pkg/',
  );
}

abstract class RustLibApi extends BaseApi {
  BanditResult crateApiClientCoreClientBanditAction(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes,
      required Map<String, Map<String, AttributeValue>> actions,
      required String defaultVariation});

  (bool?, Map<String, dynamic>?) crateApiClientCoreClientBooleanAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes});

  (int?, Map<String, dynamic>?) crateApiClientCoreClientIntegerAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes});

  (String?, Map<String, dynamic>?) crateApiClientCoreClientJsonAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes});

  CoreClient crateApiClientCoreClientNew(
      {required String sdkKey,
      String baseUrl = r"https://fscdn.eppo.cloud/api",
      int pollIntervalMs = 30000,
      int pollJitterMs = 3000});

  (double?, Map<String, dynamic>?) crateApiClientCoreClientNumericAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes});

  (String?, Map<String, dynamic>?) crateApiClientCoreClientStringAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes});

  Future<void> crateApiClientCoreClientWaitForInitialization(
      {required CoreClient that});

  AttributeValue crateApiAttributesBoolAttribute({required bool value});

  AttributeValue crateApiAttributesCategoricalNumberAttribute(
      {required double value});

  void crateApiInitApp();

  AttributeValue crateApiAttributesNumericAttribute({required double value});

  AttributeValue crateApiAttributesStringAttribute({required String value});

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AttributeValue;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AttributeValue;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AttributeValuePtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_CoreClient;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_CoreClient;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_CoreClientPtr;
}

class RustLibApiImpl extends RustLibApiImplPlatform implements RustLibApi {
  RustLibApiImpl({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @override
  BanditResult crateApiClientCoreClientBanditAction(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes,
      required Map<String, Map<String, AttributeValue>> actions,
      required String defaultVariation}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        sse_encode_String(flagKey, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            subjectKey, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            subjectAttributes, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            actions, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            defaultVariation, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 1)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_bandit_result,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientBanditActionConstMeta,
      argValues: [
        that,
        flagKey,
        subjectKey,
        subjectAttributes,
        actions,
        defaultVariation
      ],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientBanditActionConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_bandit_action",
        argNames: [
          "that",
          "flagKey",
          "subjectKey",
          "subjectAttributes",
          "actions",
          "defaultVariation"
        ],
      );

  @override
  (bool?, Map<String, dynamic>?) crateApiClientCoreClientBooleanAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        sse_encode_String(flagKey, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            subjectKey, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            subjectAttributes, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 2)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_record_opt_box_autoadd_bool_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientBooleanAssignmentConstMeta,
      argValues: [that, flagKey, subjectKey, subjectAttributes],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientBooleanAssignmentConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_boolean_assignment",
        argNames: ["that", "flagKey", "subjectKey", "subjectAttributes"],
      );

  @override
  (int?, Map<String, dynamic>?) crateApiClientCoreClientIntegerAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        sse_encode_String(flagKey, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            subjectKey, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            subjectAttributes, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 3)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_record_opt_casted_primitive_i_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientIntegerAssignmentConstMeta,
      argValues: [that, flagKey, subjectKey, subjectAttributes],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientIntegerAssignmentConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_integer_assignment",
        argNames: ["that", "flagKey", "subjectKey", "subjectAttributes"],
      );

  @override
  (String?, Map<String, dynamic>?) crateApiClientCoreClientJsonAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        sse_encode_String(flagKey, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            subjectKey, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            subjectAttributes, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 4)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_record_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientJsonAssignmentConstMeta,
      argValues: [that, flagKey, subjectKey, subjectAttributes],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientJsonAssignmentConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_json_assignment",
        argNames: ["that", "flagKey", "subjectKey", "subjectAttributes"],
      );

  @override
  CoreClient crateApiClientCoreClientNew(
      {required String sdkKey,
      String baseUrl = r"https://fscdn.eppo.cloud/api",
      int pollIntervalMs = 30000,
      int pollJitterMs = 3000}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(sdkKey, serializer);
        sse_encode_String(baseUrl, serializer);
        sse_encode_CastedPrimitive_u_64(pollIntervalMs, serializer);
        sse_encode_CastedPrimitive_u_64(pollJitterMs, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 5)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientNewConstMeta,
      argValues: [sdkKey, baseUrl, pollIntervalMs, pollJitterMs],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientNewConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_new",
        argNames: ["sdkKey", "baseUrl", "pollIntervalMs", "pollJitterMs"],
      );

  @override
  (double?, Map<String, dynamic>?) crateApiClientCoreClientNumericAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        sse_encode_String(flagKey, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            subjectKey, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            subjectAttributes, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 6)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_record_opt_box_autoadd_f_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientNumericAssignmentConstMeta,
      argValues: [that, flagKey, subjectKey, subjectAttributes],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientNumericAssignmentConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_numeric_assignment",
        argNames: ["that", "flagKey", "subjectKey", "subjectAttributes"],
      );

  @override
  (String?, Map<String, dynamic>?) crateApiClientCoreClientStringAssignment(
      {required CoreClient that,
      required String flagKey,
      required String subjectKey,
      required Map<String, AttributeValue> subjectAttributes}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        sse_encode_String(flagKey, serializer);
        sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            subjectKey, serializer);
        sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            subjectAttributes, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 7)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_record_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientStringAssignmentConstMeta,
      argValues: [that, flagKey, subjectKey, subjectAttributes],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientStringAssignmentConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_string_assignment",
        argNames: ["that", "flagKey", "subjectKey", "subjectAttributes"],
      );

  @override
  Future<void> crateApiClientCoreClientWaitForInitialization(
      {required CoreClient that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 8, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiClientCoreClientWaitForInitializationConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiClientCoreClientWaitForInitializationConstMeta =>
      const TaskConstMeta(
        debugName: "CoreClient_wait_for_initialization",
        argNames: ["that"],
      );

  @override
  AttributeValue crateApiAttributesBoolAttribute({required bool value}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_bool(value, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 9)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAttributesBoolAttributeConstMeta,
      argValues: [value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAttributesBoolAttributeConstMeta =>
      const TaskConstMeta(
        debugName: "bool_attribute",
        argNames: ["value"],
      );

  @override
  AttributeValue crateApiAttributesCategoricalNumberAttribute(
      {required double value}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_f_64(value, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 10)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAttributesCategoricalNumberAttributeConstMeta,
      argValues: [value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAttributesCategoricalNumberAttributeConstMeta =>
      const TaskConstMeta(
        debugName: "categorical_number_attribute",
        argNames: ["value"],
      );

  @override
  void crateApiInitApp() {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 11)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiInitAppConstMeta,
      argValues: [],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiInitAppConstMeta => const TaskConstMeta(
        debugName: "init_app",
        argNames: [],
      );

  @override
  AttributeValue crateApiAttributesNumericAttribute({required double value}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_f_64(value, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 12)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAttributesNumericAttributeConstMeta,
      argValues: [value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAttributesNumericAttributeConstMeta =>
      const TaskConstMeta(
        debugName: "numeric_attribute",
        argNames: ["value"],
      );

  @override
  AttributeValue crateApiAttributesStringAttribute({required String value}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(value, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 13)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAttributesStringAttributeConstMeta,
      argValues: [value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAttributesStringAttributeConstMeta =>
      const TaskConstMeta(
        debugName: "string_attribute",
        argNames: ["value"],
      );

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AttributeValue => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AttributeValue => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_CoreClient => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_CoreClient => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient;

  @protected
  AttributeValue
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AttributeValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  CoreClient
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return CoreClientImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  CoreClient
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return CoreClientImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  int dco_decode_CastedPrimitive_i_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError(
        'Not implemented in this codec, please use the other one');
  }

  @protected
  int dco_decode_CastedPrimitive_u_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError(
        'Not implemented in this codec, please use the other one');
  }

  @protected
  Map<String, dynamic>
      dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError(
        'Not implemented in this codec, please use the other one');
  }

  @protected
  Map<String, dynamic>
      dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError(
        'Not implemented in this codec, please use the other one');
  }

  @protected
  String
      dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError(
        'Not implemented in this codec, please use the other one');
  }

  @protected
  Map<String, AttributeValue>
      dco_decode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(
        dco_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
                raw)
            .map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, Map<String, AttributeValue>>
      dco_decode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(
        dco_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
                raw)
            .map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  AttributeValue
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AttributeValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  CoreClient
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return CoreClientImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  String dco_decode_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as String;
  }

  @protected
  BanditResult dco_decode_bandit_result(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return BanditResult(
      variation:
          dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
              arr[0]),
      action:
          dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
              arr[1]),
      assignmentEvent:
          dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
              arr[2]),
      banditEvent:
          dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
              arr[3]),
    );
  }

  @protected
  bool dco_decode_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as double;
  }

  @protected
  double dco_decode_f_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as double;
  }

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeI64(raw);
  }

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Uint8List;
  }

  @protected
  List<(String, AttributeValue)>
      dco_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value)
        .toList();
  }

  @protected
  List<(String, Map<String, AttributeValue>)>
      dco_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value)
        .toList();
  }

  @protected
  int? dco_decode_opt_CastedPrimitive_i_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_CastedPrimitive_i_64(raw);
  }

  @protected
  Map<String, dynamic>?
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
            raw);
  }

  @protected
  Map<String, dynamic>?
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
            raw);
  }

  @protected
  String?
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            raw);
  }

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_bool(raw);
  }

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_f_64(raw);
  }

  @protected
  (
    String,
    AttributeValue
  ) dco_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          arr[0]),
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          arr[1]),
    );
  }

  @protected
  (
    String,
    Map<String, AttributeValue>
  ) dco_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          arr[0]),
      dco_decode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          arr[1]),
    );
  }

  @protected
  (
    bool?,
    Map<String, dynamic>?
  ) dco_decode_record_opt_box_autoadd_bool_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_opt_box_autoadd_bool(arr[0]),
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          arr[1]),
    );
  }

  @protected
  (
    double?,
    Map<String, dynamic>?
  ) dco_decode_record_opt_box_autoadd_f_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_opt_box_autoadd_f_64(arr[0]),
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          arr[1]),
    );
  }

  @protected
  (
    int?,
    Map<String, dynamic>?
  ) dco_decode_record_opt_casted_primitive_i_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_opt_CastedPrimitive_i_64(arr[0]),
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          arr[1]),
    );
  }

  @protected
  (
    String?,
    Map<String, dynamic>?
  ) dco_decode_record_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          arr[0]),
      dco_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          arr[1]),
    );
  }

  @protected
  BigInt dco_decode_u_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  int dco_decode_u_8(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  void dco_decode_unit(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return;
  }

  @protected
  BigInt dco_decode_usize(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  AttributeValue
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AttributeValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  CoreClient
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return CoreClientImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  CoreClient
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return CoreClientImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  int sse_decode_CastedPrimitive_i_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_64(deserializer);
    return inner.toInt();
  }

  @protected
  int sse_decode_CastedPrimitive_u_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_u_64(deserializer);
    return inner.toInt();
  }

  @protected
  Map<String, dynamic>
      sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return json.decode(inner);
  }

  @protected
  Map<String, dynamic>
      sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return json.decode(inner);
  }

  @protected
  String
      sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return inner;
  }

  @protected
  Map<String, AttributeValue>
      sse_decode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
            deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, Map<String, AttributeValue>>
      sse_decode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
            deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  AttributeValue
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AttributeValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  CoreClient
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return CoreClientImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  String sse_decode_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_prim_u_8_strict(deserializer);
    return utf8.decoder.convert(inner);
  }

  @protected
  BanditResult sse_decode_bandit_result(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_variation =
        sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            deserializer);
    var var_action =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            deserializer);
    var var_assignmentEvent =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
            deserializer);
    var var_banditEvent =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
            deserializer);
    return BanditResult(
        variation: var_variation,
        action: var_action,
        assignmentEvent: var_assignmentEvent,
        banditEvent: var_banditEvent);
  }

  @protected
  bool sse_decode_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8() != 0;
  }

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_bool(deserializer));
  }

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_f_64(deserializer));
  }

  @protected
  double sse_decode_f_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getFloat64();
  }

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getPlatformInt64();
  }

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var len_ = sse_decode_i_32(deserializer);
    return deserializer.buffer.getUint8List(len_);
  }

  @protected
  List<(String, AttributeValue)>
      sse_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, AttributeValue)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<(String, Map<String, AttributeValue>)>
      sse_decode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, Map<String, AttributeValue>)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
              deserializer));
    }
    return ans_;
  }

  @protected
  int? sse_decode_opt_CastedPrimitive_i_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_CastedPrimitive_i_64(deserializer));
    } else {
      return null;
    }
  }

  @protected
  Map<String, dynamic>?
      sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  Map<String, dynamic>?
      sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  String?
      sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_bool(deserializer));
    } else {
      return null;
    }
  }

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_f_64(deserializer));
    } else {
      return null;
    }
  }

  @protected
  (
    String,
    AttributeValue
  ) sse_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 =
        sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            deserializer);
    var var_field1 =
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    String,
    Map<String, AttributeValue>
  ) sse_decode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 =
        sse_decode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            deserializer);
    var var_field1 =
        sse_decode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    bool?,
    Map<String, dynamic>?
  ) sse_decode_record_opt_box_autoadd_bool_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_field1 =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    double?,
    Map<String, dynamic>?
  ) sse_decode_record_opt_box_autoadd_f_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_opt_box_autoadd_f_64(deserializer);
    var var_field1 =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    int?,
    Map<String, dynamic>?
  ) sse_decode_record_opt_casted_primitive_i_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_opt_CastedPrimitive_i_64(deserializer);
    var var_field1 =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    String?,
    Map<String, dynamic>?
  ) sse_decode_record_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
            deserializer);
    var var_field1 =
        sse_decode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  int sse_decode_u_8(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8();
  }

  @protected
  void sse_decode_unit(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  int sse_decode_i_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getInt32();
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          AttributeValue self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AttributeValueImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          CoreClient self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as CoreClientImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          CoreClient self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as CoreClientImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_CastedPrimitive_i_64(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_64(sseEncodeCastedPrimitiveI64(self), serializer);
  }

  @protected
  void sse_encode_CastedPrimitive_u_64(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_64(sseEncodeCastedPrimitiveU64(self), serializer);
  }

  @protected
  void
      sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          Map<String, dynamic> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(json.encode(self), serializer);
  }

  @protected
  void
      sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          Map<String, dynamic> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(json.encode(self), serializer);
  }

  @protected
  void
      sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          String self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self, serializer);
  }

  @protected
  void
      sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          Map<String, AttributeValue> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
        self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void
      sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          Map<String, Map<String, AttributeValue>> self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
        self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
          AttributeValue self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AttributeValueImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreClient(
          CoreClient self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as CoreClientImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_String(String self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_prim_u_8_strict(utf8.encoder.convert(self), serializer);
  }

  @protected
  void sse_encode_bandit_result(BanditResult self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
        self.variation, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
        self.action, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
        self.assignmentEvent, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
        self.banditEvent, serializer);
  }

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self ? 1 : 0);
  }

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_bool(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_f_64(self, serializer);
  }

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putFloat64(self);
  }

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putPlatformInt64(self);
  }

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    serializer.buffer.putUint8List(self);
  }

  @protected
  void
      sse_encode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          List<(String, AttributeValue)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          List<(String, Map<String, AttributeValue>)> self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          item, serializer);
    }
  }

  @protected
  void sse_encode_opt_CastedPrimitive_i_64(
      int? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_CastedPrimitive_i_64(self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          Map<String, dynamic>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          Map<String, dynamic>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBanditEvent(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          String? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
          self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_bool(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_f_64(self, serializer);
    }
  }

  @protected
  void
      sse_encode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          (String, AttributeValue) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
        self.$1, serializer);
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_map_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_attribute_value(
          (String, Map<String, AttributeValue>) self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
        self.$1, serializer);
    sse_encode_Map_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAttributeValue(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_opt_box_autoadd_bool_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
          (bool?, Map<String, dynamic>?) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_bool(self.$1, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_opt_box_autoadd_f_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
          (double?, Map<String, dynamic>?) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_f_64(self.$1, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_opt_casted_primitive_i_64_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
          (int?, Map<String, dynamic>?) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_CastedPrimitive_i_64(self.$1, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_str_opt_custom_serializer_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_assignment_event(
          (String?, Map<String, dynamic>?) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStr(
        self.$1, serializer);
    sse_encode_opt_CustomSerializer_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignmentEvent(
        self.$2, serializer);
  }

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self);
  }

  @protected
  void sse_encode_unit(void self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putInt32(self);
  }
}

@sealed
class AttributeValueImpl extends RustOpaque implements AttributeValue {
  // Not to be used by end users
  AttributeValueImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AttributeValueImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AttributeValue,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AttributeValue,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_AttributeValuePtr,
  );
}

@sealed
class CoreClientImpl extends RustOpaque implements CoreClient {
  // Not to be used by end users
  CoreClientImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  CoreClientImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_CoreClient,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_CoreClient,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_CoreClientPtr,
  );

  BanditResult banditAction(
          String flagKey,
          String subjectKey,
          Map<String, AttributeValue> subjectAttributes,
          Map<String, Map<String, AttributeValue>> actions,
          String defaultVariation) =>
      RustLib.instance.api.crateApiClientCoreClientBanditAction(
          that: this,
          flagKey: flagKey,
          subjectKey: subjectKey,
          subjectAttributes: subjectAttributes,
          actions: actions,
          defaultVariation: defaultVariation);

  (bool?, Map<String, dynamic>?) booleanAssignment(String flagKey,
          String subjectKey, Map<String, AttributeValue> subjectAttributes) =>
      RustLib.instance.api.crateApiClientCoreClientBooleanAssignment(
          that: this,
          flagKey: flagKey,
          subjectKey: subjectKey,
          subjectAttributes: subjectAttributes);

  (int?, Map<String, dynamic>?) integerAssignment(String flagKey,
          String subjectKey, Map<String, AttributeValue> subjectAttributes) =>
      RustLib.instance.api.crateApiClientCoreClientIntegerAssignment(
          that: this,
          flagKey: flagKey,
          subjectKey: subjectKey,
          subjectAttributes: subjectAttributes);

  (String?, Map<String, dynamic>?) jsonAssignment(String flagKey,
          String subjectKey, Map<String, AttributeValue> subjectAttributes) =>
      RustLib.instance.api.crateApiClientCoreClientJsonAssignment(
          that: this,
          flagKey: flagKey,
          subjectKey: subjectKey,
          subjectAttributes: subjectAttributes);

  (double?, Map<String, dynamic>?) numericAssignment(String flagKey,
          String subjectKey, Map<String, AttributeValue> subjectAttributes) =>
      RustLib.instance.api.crateApiClientCoreClientNumericAssignment(
          that: this,
          flagKey: flagKey,
          subjectKey: subjectKey,
          subjectAttributes: subjectAttributes);

  (String?, Map<String, dynamic>?) stringAssignment(String flagKey,
          String subjectKey, Map<String, AttributeValue> subjectAttributes) =>
      RustLib.instance.api.crateApiClientCoreClientStringAssignment(
          that: this,
          flagKey: flagKey,
          subjectKey: subjectKey,
          subjectAttributes: subjectAttributes);

  Future<void> waitForInitialization() =>
      RustLib.instance.api.crateApiClientCoreClientWaitForInitialization(
        that: this,
      );
}
