name: Core and Rust SDK

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo_build:
    name: Cargo Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: npm ci
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: make workspace-build

  cargo_test:
    name: Cargo Test
    runs-on: ubuntu-latest
    needs: cargo_build
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: npm ci
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: make workspace-test

  cargo_build_fastly_edge_assignments_wasm:
    name: Cargo Build WASM
    runs-on: ubuntu-latest
    needs: cargo_build
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: npm ci
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: make fastly-edge-assignments-build

  cargo_test_fastly_edge_assignments_wasm:
    name: Cargo Test WASM
    runs-on: ubuntu-latest
    needs: cargo_build_fastly_edge_assignments_wasm
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: npm ci
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: make fastly-edge-assignments-test

  cargo_doc:
    name: Cargo Documentation
    runs-on: ubuntu-latest
    needs: [cargo_test, cargo_test_fastly_edge_assignments_wasm]
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: npm ci
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo doc --verbose
