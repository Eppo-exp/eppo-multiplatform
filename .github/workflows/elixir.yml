---
name: Elixir SDK

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  elixir_test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos]
        elixir: ['1.15', '1.16', '1.17', '1.18']
        otp: ['26.0', '27.0']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Elixir & Rust
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cache Mix dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - run: npm ci

      - name: Override eppo_core for testing
        run: |
          mkdir -p ~/.cargo/
          echo "[patch.crates-io.eppo_core]" >> "${CARGO_HOME:-$HOME/.cargo}/config.toml"
          echo "path = '$PWD/eppo_core'" >> "${CARGO_HOME:-$HOME/.cargo}/config.toml"

      - name: Install dependencies
        run: mix deps.get
        working-directory: elixir-sdk

      - name: Compile
        run: mix compile
        working-directory: elixir-sdk

      - name: Run tests
        run: npm run with-server test:elixir
