name: Dart SDK Android Build

on:
  push:
    branches:
      - main
    tags:
      - "dart-sdk@*"
    paths:
      - "dart-sdk/rust/**"
      - "eppo_core/**"
      - ".github/workflows/android.yml"
  pull_request:
    paths:
      - "dart-sdk/rust/**"
      - "eppo_core/**"
      - ".github/workflows/android.yml"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-android:
    name: Build Android (${{ matrix.target }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          [aarch64-linux-android, x86_64-linux-android, armv7-linux-androideabi]
        include:
          - target: aarch64-linux-android
            android_abi: arm64-v8a
          - target: x86_64-linux-android
            android_abi: x86_64
          - target: armv7-linux-androideabi
            android_abi: armeabi-v7a

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: dart-sdk/rust -> target
          key: ${{ matrix.target }}

      - name: Override eppo_core for testing
        shell: bash
        run: |
          mkdir -p "${CARGO_HOME:-$HOME/.cargo}"
          echo "[patch.crates-io.eppo_core]" >> "${CARGO_HOME:-$HOME/.cargo}/config.toml"
          echo "path = '${{ github.workspace }}/eppo_core'" >> "${CARGO_HOME:-$HOME/.cargo}/config.toml"

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Build for ${{ matrix.target }}
        run: |
          cd dart-sdk/rust
          cross build --release --target ${{ matrix.target }} -p eppo_sdk

      - name: Create output directory
        run: mkdir -p android-libs/${{ matrix.android_abi }}

      - name: Copy library to output directory
        run: |
          cp dart-sdk/rust/target/${{ matrix.target }}/release/libeppo_sdk.so android-libs/${{ matrix.android_abi }}/

      - name: Upload Android libraries
        uses: actions/upload-artifact@v4
        with:
          name: android-libs-${{ matrix.android_abi }}
          path: android-libs/${{ matrix.android_abi }}

  collect-artifacts:
    name: Collect Android Artifacts
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: android-libs
          pattern: android-libs-*
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R android-libs

      - name: Create jniLibs directory structure
        run: |
          mkdir -p dart-sdk/android/src/main/jniLibs
          cp -r android-libs/* dart-sdk/android/src/main/jniLibs/

      - name: Upload combined artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-jniLibs
          path: dart-sdk/android/src/main/jniLibs
